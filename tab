import lombok.Getter;
import lombok.experimental.FieldDefaults;
import lombok.AccessLevel;

@Getter
@FieldDefaults(level = AccessLevel.PRIVATE)
public class SwapException extends RuntimeException {

    String errorID;
    int httpStatus;
    String message;
    BusinessErrorMessage beMessage;

    public SwapException(String errorID, String message, int httpStatus) {
        super(message);
        this.errorID = errorID;
        this.httpStatus = httpStatus;
        this.message = message;
    }

    public SwapException(BusinessErrorMessage beMessage) {
        super(beMessage.getMessage());
        this.errorID = beMessage.getCode();
        this.httpStatus = beMessage.getHttpStatus();
        this.message = beMessage.getMessage();
        this.beMessage = beMessage;
    }

    public SwapException(BusinessErrorMessage beMessage, String... args) {
        super(beMessage.getMessage(args));
        this.errorID = beMessage.getCode();
        this.httpStatus = beMessage.getHttpStatus();
        this.message = beMessage.getMessage(args);
        this.beMessage = beMessage;
    }

    public SwapException(BusinessErrorMessage beMessage, Throwable cause, String... args) {
        super(beMessage.getMessage(args), cause);
        this.errorID = beMessage.getCode();
        this.httpStatus = beMessage.getHttpStatus();
        this.message = beMessage.getMessage(args);
        this.beMessage = beMessage;
    }
}
